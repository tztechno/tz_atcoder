##################################################################
109行109列のグリッドがあり、このグリッドの上からi番目、左からj番目のマスをマス(i,j)と表記します。
グリッド上にはN人の人がおり、はじめi人目の人はマス(Ri​,Ci​)にいます。
はじめ時刻は0であり、各人は、時刻1,2,3,4,…に以下のような移動をすることができます。
その場に留まるか、8近傍のマスに移動する。ただし、グリッドの外側に出ることはできない。
厳密には、現在いるマスをマス(i,j)としてマス(i−1,j−1),(i−1,j),(i−1,j+1),(i,j−1),(i,j),(i,j+1),(i+1,j−1),(i+1,j),(i+1,j+1)のうち存在するマスのいずれかに移動する。
また、移動には時間がかからないものとする。N人の人が全員同じマスに集まる時刻として考えられる最小値を求めてください。
##################################################################

##################################################################

##################################################################

##################################################################

##################################################################

##################################################################

##################################################################

##################################################################

##################################################################

##################################################################

##################################################################
[MyBrain AC]
import sys
import math
input = sys.stdin.readline

N = int(input())
X = []
Y = []

for _ in range(N):
    x, y = map(int, input().split())
    X.append(x)
    Y.append(y)

# 中心を小数で計算
x_center = (min(X) + max(X)) / 2
y_center = (min(Y) + max(Y)) / 2

# 中心から端までの距離の最大値を切り上げ
ans = math.ceil(max(abs(x_center - min(X)), abs(x_center - max(X)),
                    abs(y_center - min(Y)), abs(y_center - max(Y))))

print(ans)

##################################################################
[titia]
import sys
input = sys.stdin.readline

N=int(input())
A=[]
B=[]

for i in range(N):
    x,y=map(int,input().split())
    A.append(x)
    B.append(y)

A.sort()
B.sort()
k=(A[0]+A[-1])//2
l=(B[0]+B[-1])//2

ANS=max(abs(A[0]-k),abs(A[-1]-k),abs(B[0]-l),abs(B[-1]-l))
print(ANS)
##################################################################
ans = math.ceil(max(dr, dc) / 2)
ans = (max(dr, dc) + 1) // 2

q, r = divmod(max(dr, dc), 2)
ans = q + (1 if r else 0)

r = 1 の場合 → if r は True → 1 を足す
r = 0 の場合 → if r は False → 0 を足す
##################################################################
[MyAi AC]
import math

N = int(input())
rows, cols = [], []
for _ in range(N):
    r, c = map(int, input().split())
    rows.append(r)
    cols.append(c)

dr = max(rows) - min(rows)
dc = max(cols) - min(cols)

ans = math.ceil(max(dr, dc) / 2)
print(ans)
##################################################################
