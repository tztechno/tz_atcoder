##################################################################
英小文字からなる長さNの文字列Sが与えられます。
Sの空でない部分文字列であって、1種類の文字のみからなるものの数を求めてください。
ただし、文字列として等しい部分文字列同士は、取り出し方が異なっても区別しません。
なお、Sの空でない部分文字列とは、Sの先頭から0文字以上、末尾から0文字以上削除して得られる文字列のうち、長さが1以上であるもののことをいいます。
例えば、abやabcはabcの空でない部分文字列ですが、acや空文字列はabcの空でない部分文字列ではありません。
##################################################################

##################################################################

##################################################################

##################################################################

##################################################################

##################################################################

##################################################################

##################################################################

##################################################################

##################################################################

##################################################################
[gemini explanation]

---

```python
N = int(input())
S = str(input())
```

* 標準入力から2つ読み取ります：

  1. `N`：文字列の長さ（整数）
  2. `S`：文字列

```python
from itertools import groupby
```

* `itertools` モジュールから `groupby` をインポート
* `groupby` は **連続して同じ要素をまとめる**ために使います。

```python
max_lengths = {}
```

* 空の辞書を作ります。
* この辞書に **各文字の最長連続出現長** を保存していきます。

```python
if S:
    for key, group in groupby(S):
        length = len(list(group))
        if key not in max_lengths or length > max_lengths[key]:
            max_lengths[key] = length
```

* `if S:` は文字列が空でないか確認しています。
* `for key, group in groupby(S):` で文字列の連続する同じ文字の塊を順番に処理します：

  * `key` は文字
  * `group` はその連続する文字のイテレータ
* `length = len(list(group))` でその連続ブロックの長さを求めます。
* `if` 文は、辞書にまだ文字がない場合、または今回のブロックが既存の最大より長い場合に更新します。

```python
print(sum(max_lengths.values()))
```

* 辞書に保存された **各文字の最長連続長** の合計を出力します。

##################################################################
[gemini AC]
N=int(input())
S=str(input())
from itertools import groupby
max_lengths = {}
if S: 
    for key, group in groupby(S):
        length = len(list(group))
        if key not in max_lengths or length > max_lengths[key]:
            max_lengths[key] = length
print(sum(max_lengths.values()))
##################################################################
[mybrain TLE]
N = int(input())
S = list(input())
A = set()
for i in range(N):
  for j in range(i,N):
    if S[j]==S[i]:
      A.add(''.join(S[i:j+1]))
    else:
      break
print(len(A))
##################################################################
[mybrain TLE]
N = int(input())
S = list(input())
A = set()
for i in range(N+1):
  for j in range(i + 1, N+1):
    sp = S[i:j]
    if len(set(sp)) == 1:
      A.add(''.join(sp))
print(len(A))
##################################################################

